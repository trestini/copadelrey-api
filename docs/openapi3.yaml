openapi: "3.0.0"
info:
  version: 1.0.0
  title: Copa Del Rey
  description: Copa Del Rey de Sinuca
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: http://localhost:4000/v1
  - url: https://copadelrey-api.herokuapp.com/v1
paths:
  /ranking:
    get:
      description: |
        Devolve o ranking dos jogadores capacitados e com envergadura moral para participar do saudoso campeonato
      operationId: getRanking
      parameters:
        - name: mod
          in: query
          description: Modalidade dos jogos - (D)upla ou (S)olo
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Lista com os jogadores e posicao no ranking
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RankingPosition'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /player:
    get:
      tags: 
        - player
      description: |
        Devolve os jogadores capacitados e com envergadura moral para participar do saudoso campeonado
      operationId: get all players
      parameters:
        - name: like
          in: query
          description: filtro por nome do jogador (like)
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Lista com os jogadores
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Player'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - player
      description: |
        Adiciona um novo jogador
      operationId: add new player
      requestBody:
        description: Informacoes sobre o cabra que acha que vai ganhar alguma coisa jogando sinuca no trampo
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Player'
      responses:
        '201':
          description: game response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /games:
    get:
      tags:
        - game
      description: |
        Devolve uma lista com os jogos das etapas abertas
      operationId: get current stage games
      responses:
        '200':
          description: Lista com os jogos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Game'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /game/{stage}:
    get:
      tags:
        - game
      description: |
        Devolve uma lista com os jogos realizados na etapa informada
      operationId: get game from stage
      parameters:
        - name: stage
          in: path
          description: ID da etapa
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Lista com os jogos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Game'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - game
      description: |
        Adiciona um jogo na etapa
      operationId: add new game in stage
      parameters:
        - name: stage
          in: path
          description: ID da etapa
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Detalhes do jogo
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewGame'
      responses:
        '201':
          description: game response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /game/{game_id}:
    patch:
      tags:
        - game
      description: |
        Altera propriedades do jogo
      operationId: patches game
      parameters:
        - name: game_id
          in: path
          description: ID da batalha campal
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Detalhes do jogo
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGame'
      responses:
        '201':
          description: game response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Game:
      type: object
      properties:
        id:
          type: integer
        date:
          type: string
          format: datetime
        stage:
          $ref: '#/components/schemas/Stage'
        players:
          type: array
          items:
            $ref: '#/components/schemas/Player'
        balls_remaining:
          type: integer
        rule:
          type: string
        ended:
          type: boolean
        type:
          type: string

    PatchedGame:
      type: object
      properties:
        balls_remaining:
          type: integer
        rule:
          type: string
        ended:
          type: boolean

    NewGame:
      type: object
      properties:
        balls_remaining:
          type: integer
        rule:
          type: string
        ended:
          type: boolean
        teams:
          type: array
          items:
            properties:
              name:
                type: string
              players:
                type: array
                items:
                  type: integer

    Stage:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string

    Player:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        is_active:
          type: boolean

    RankingPosition:
      type: object
      properties:
        player:
          $ref: '#/components/schemas/Player'
        position:
          type: integer

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string